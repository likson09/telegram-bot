const UserService = require('../services/user-service');
const { validateFIO } = require('../../utils/validators');
const { truncateName } = require('../../utils/formatters');

function setupMainHandlers(bot) {
    let userService = null;

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
    async function getUserService() {
        if (!userService) {
            userService = new UserService();
            await userService.connect();
        }
        return userService;
    }

    // –ö–æ–º–∞–Ω–¥–∞ /start
    bot.start(async (ctx) => {
        try {
            console.log('–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', ctx.from.id);
            
            const service = await getUserService();
            const isAdmin = await service.isAdmin(ctx.from.id);
            
            const welcomeMessage = `üëã *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏!*\n\n` +
                                  `üìà –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ:\n` +
                                  `‚Ä¢ üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–µ –æ—à–∏–±–æ–∫\n` +
                                  `‚Ä¢ üìÖ –î–∞–Ω–Ω—ã—Ö —Ç–∞–±–µ–ª—è\n` +
                                  `‚Ä¢ üöÄ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ç—Ä—É–¥–∞\n` +
                                  `‚Ä¢ üíº –ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞—Ö –∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Å–º–µ–Ω–∞—Ö\n\n` +
                                  `${isAdmin ? '‚ö° *–í—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∏—Å—Ç–µ–º—ã*' : ''}\n\n` +
                                  `üìù *–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –§–ò–û* (–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ) –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã.`;
            
            await ctx.reply(welcomeMessage, { parse_mode: 'Markdown' });
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–≤–µ—Ç–µ –Ω–∞ /start:', error);
            await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    });

    // –ö–æ–º–∞–Ω–¥–∞ /help
    bot.command('help', async (ctx) => {
        const helpMessage = `üìñ *–ü–û–ú–û–©–¨ –ü–û –ë–û–¢–£*\n\n` +
                           `*–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n` +
                           `/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n` +
                           `/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n` +
                           `/pod - –ë—ã—Å—Ç—Ä–∞—è –∑–∞–ø–∏—Å—å –Ω–∞ –ø–æ–¥—Ä–∞–±–æ—Ç–∫—É\n\n` +
                           `*–î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:*\n` +
                           `/admin - –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n` +
                           `/podrabotka - –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å–º–µ–Ω—É\n\n` +
                           `*–ö–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å:*\n` +
                           `1. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –§–ò–û\n` +
                           `2. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é\n` +
                           `3. –ü–æ–ª—É—á–∞–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é`;
        
        await ctx.reply(helpMessage, { parse_mode: 'Markdown' });
    });

    // –ö–æ–º–∞–Ω–¥–∞ /info
    bot.command('info', async (ctx) => {
        const infoMessage = `‚ÑπÔ∏è *–ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ë–û–¢–ï*\n\n` +
                           `*–í–µ—Ä—Å–∏—è:* 1.0.0\n` +
                           `*–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ:* –°–∏—Å—Ç–µ–º–∞ —É—á–µ—Ç–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –ø–æ–¥—Ä–∞–±–æ—Ç–æ–∫\n` +
                           `*–§—É–Ω–∫—Ü–∏–∏:*\n` +
                           `‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—à–∏–±–æ–∫ –∏ —Ç–∞–±–µ–ª—è\n` +
                           `‚Ä¢ –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏\n` +
                           `‚Ä¢ –ó–∞–ø–∏—Å—å –Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–º–µ–Ω—ã\n` +
                           `‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤\n\n` +
                           `*–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞:* –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫ –≤–∞—à–µ–º—É —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é`;
        
        await ctx.reply(infoMessage, { parse_mode: 'Markdown' });
    });

    // –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    bot.action('menu_back_main', async (ctx) => {
        try {
            const service = await getUserService();
            const fullFio = ctx.session.userFio;

            if (!fullFio) {
                await ctx.editMessageText('üìù *–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –§–ò–û –∑–∞–Ω–æ–≤–æ:*\n(–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ)', { 
                    parse_mode: 'Markdown' 
                });
                return;
            }

            const isAdmin = await service.isAdmin(ctx.from.id);
            const menuMessage = `üë§ *${fullFio}*\n\n` +
                               `üìä *–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:*`;

            await ctx.editMessageText(menuMessage, {
                parse_mode: 'Markdown',
                reply_markup: { inline_keyboard: createMainMenu(isAdmin) }
            });
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:', error);
            await ctx.editMessageText('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–Ω—é', {
                reply_markup: { inline_keyboard: createBackButton() }
            });
        }
    });

    // –°–º–µ–Ω–∞ –§–ò–û
    bot.action('menu_change_fio', async (ctx) => {
        try {
            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º adminAction —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞
            ctx.session.adminAction = null;
            ctx.session.userFio = null;
            
            await ctx.editMessageText('üìù *–°–ú–ï–ù–ê –§–ò–û*\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ –§–ò–û –∑–∞–Ω–æ–≤–æ:\n(–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ)', { 
                parse_mode: 'Markdown',
                reply_markup: {
                    inline_keyboard: [
                        [{ text: '‚ùå –û—Ç–º–µ–Ω–∞', callback_data: 'menu_back_main' }]
                    ]
                }
            });
            await ctx.answerCbQuery();
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –§–ò–û:', error);
            await ctx.answerCbQuery('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–º–µ–Ω–µ –§–ò–û');
        }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–§–ò–û)
    bot.on('text', async (ctx) => {
        if (ctx.message.text.startsWith('/')) return;

        // –ï—Å–ª–∏ —ç—Ç–æ –∞–¥–º–∏–Ω—Å–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—ã—á–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
        if (ctx.session.adminAction && (ctx.session.adminAction === 'add' || ctx.session.adminAction === 'remove')) {
            return;
        }

        // –ï—Å–ª–∏ –∏–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Å–º–µ–Ω—ã, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –§–ò–û
        if (ctx.session.creatingShift) {
            return;
        }

        const fio = ctx.message.text.trim();
        console.log('–ü–æ–ª—É—á–µ–Ω–æ –§–ò–û:', fio);
        
        try {
            const service = await getUserService();

            if (!validateFIO(fio)) {
                const errorMessage = `‚ùå *–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –§–ò–û*\n\n` +
                                   `üìã –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: *–§–∞–º–∏–ª–∏—è –ò–º—è –û—Ç—á–µ—Å—Ç–≤–æ*\n` +
                                   `–ü—Ä–∏–º–µ—Ä: *–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á*\n\n` +
                                   `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –§–ò–û –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.`;
                
                await ctx.reply(errorMessage, { parse_mode: 'Markdown' });
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
            const employeeExists = await service.checkEmployeeExists(fio);
            if (!employeeExists) {
                const notFoundMessage = `üîç *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞*\n\n` +
                                      `–ü–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É *${fio}* –¥–∞–Ω–Ω—ã—Ö –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ.\n\n` +
                                      `–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n` +
                                      `‚Ä¢ –§–ò–û –≤–≤–µ–¥–µ–Ω–æ —Å –æ—à–∏–±–∫–æ–π\n` +
                                      `‚Ä¢ –°–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –≤–Ω–µ—Å–µ–Ω –≤ —Å–∏—Å—Ç–µ–º—É\n` +
                                      `‚Ä¢ –î–∞–Ω–Ω—ã–µ –µ—â–µ –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã\n\n` +
                                      `üìù –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –§–ò–û –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∏—è.`;
                
                await ctx.reply(notFoundMessage, { parse_mode: 'Markdown' });
                return;
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–µ—Å—Å–∏–∏
            ctx.session.userFio = fio;
            const [lastName, firstName, patronymic] = fio.split(' ');
            ctx.session.shortFio = `${lastName.slice(0, 3)}${firstName.slice(0, 3)}${patronymic.slice(0, 3)}`;
            ctx.session.userId = ctx.from.id;
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
            await service.saveUser(fio, ctx.from.id);
            
            const isAdmin = await service.isAdmin(ctx.from.id);
            const menuMessage = `üë§ *${fio}*\n\n` +
                               `üìä *–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:*\n\n` +
                               `‚ñ´Ô∏è *üìä –û—à–∏–±–∫–∏* - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–±–æ—á–∏—Ö –æ—à–∏–±–æ–∫\n` +
                               `‚ñ´Ô∏è *üìÖ –¢–∞–±–µ–ª—å* - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–º–µ–Ω–∞—Ö\n` +
                               `‚ñ´Ô∏è *üöÄ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å* - –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n` +
                               `‚ñ´Ô∏è *üíº –ü–æ–¥—Ä–∞–±–æ—Ç–∫–∏* - –∑–∞–ø–∏—Å—å –Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–º–µ–Ω—ã\n\n` +
                               `${isAdmin ? '‚ö° *–†–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω*' : ''}`;
            
            await ctx.reply(menuMessage, {
                parse_mode: 'Markdown',
                reply_markup: { inline_keyboard: createMainMenu(isAdmin) }
            });
            
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –§–ò–û:', error);
            const errorMessage = `‚ö†Ô∏è *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞*\n\n` +
                               `–ü—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞ –≤–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞.\n\n` +
                               `–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`;
            
            await ctx.reply(errorMessage, { parse_mode: 'Markdown' });
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ–Ω—é
    bot.action('menu_show_errors', async (ctx) => {
        try {
            const service = await getUserService();
            const fullFio = ctx.session.userFio;

            if (!fullFio) {
                await ctx.answerCbQuery('‚ùå –§–ò–û –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –§–ò–û —Å–Ω–æ–≤–∞.');
                return;
            }

            const errorCount = await service.getErrorCount(fullFio);
            const errorMessage = `üìä *–°–¢–ê–¢–ò–°–¢–ò–ö–ê –û–®–ò–ë–û–ö*\n\n` +
                               `üë§ *–°–æ—Ç—Ä—É–¥–Ω–∏–∫:* ${fullFio}\n` +
                               `üìÖ *–ü–µ—Ä–∏–æ–¥:* –≤—Å–µ –≤—Ä–µ–º—è\n\n` +
                               `‚ùå *–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫:* ${errorCount}\n\n` +
                               `üí° *–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:* —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –≤—Å–µ –∑–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ`;
            
            await ctx.editMessageText(errorMessage, {
                parse_mode: 'Markdown',
                reply_markup: { inline_keyboard: createBackButton() }
            });
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—à–∏–±–æ–∫:', error);
            await ctx.editMessageText('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ–± –æ—à–∏–±–∫–∞—Ö.', {
                reply_markup: { inline_keyboard: createBackButton() }
            });
        }
    });

    bot.action('menu_show_timesheet', async (ctx) => {
        try {
            const service = await getUserService();
            const fullFio = ctx.session.userFio;

            if (!fullFio) {
                await ctx.answerCbQuery('‚ùå –§–ò–û –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –§–ò–û —Å–Ω–æ–≤–∞.');
                return;
            }

            const shiftData = await service.getShiftData(fullFio);
            const totalWorked = shiftData.plannedShifts + shiftData.extraShifts + shiftData.reinforcementShifts;
            const attendanceRate = shiftData.plannedShifts > 0 
                ? Math.round((totalWorked / shiftData.plannedShifts) * 100)
                : 0;

            const message = `üìä *–¢–ê–ë–ï–õ–¨ –°–û–¢–†–£–î–ù–ò–ö–ê*\n\n` +
                          `üë§ *–§–ò–û:* ${fullFio}\n\n` +
                          `üìÖ *–ì—Ä–∞—Ñ–∏–∫:* ${shiftData.plannedShifts} —Å–º–µ–Ω\n` +
                          `‚ûï *–î–æ–ø. —Å–º–µ–Ω—ã:* ${shiftData.extraShifts}\n` +
                          `‚ùå *–ü—Ä–æ–≥—É–ª—ã:* ${shiftData.absences}\n` +
                          `üí™ *–£—Å–∏–ª–µ–Ω–∏—è:* ${shiftData.reinforcementShifts}\n\n` +
                          `‚úÖ *–í—Å–µ–≥–æ –æ—Ç—Ä–∞–±–æ—Ç–∞–Ω–æ:* ${totalWorked} —Å–º–µ–Ω\n` +
                          `üìà *–ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å:* ${attendanceRate}%`;

            await ctx.editMessageText(message, {
                parse_mode: 'Markdown',
                reply_markup: { inline_keyboard: createBackButton() }
            });
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–µ–ª—è:', error);
            await ctx.editMessageText('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–∞–±–µ–ª—è.', {
                reply_markup: { inline_keyboard: createBackButton() }
            });
        }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
    bot.on('message', async (ctx) => {
        if (ctx.message.text && ctx.message.text.startsWith('/')) {
            await ctx.reply('‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.');
        }
    });

    // –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    function createMainMenu(isAdmin = false) {
        const menu = [
            [
                { 
                    text: 'üìä –û—à–∏–±–∫–∏', 
                    callback_data: 'menu_show_errors'
                },
                { 
                    text: 'üìÖ –¢–∞–±–µ–ª—å', 
                    callback_data: 'menu_show_timesheet'
                }
            ],
            [
                { 
                    text: 'üöÄ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å', 
                    callback_data: 'menu_show_productivity'
                },
                { 
                    text: 'üíº –ü–æ–¥—Ä–∞–±–æ—Ç–∫–∞', 
                    callback_data: 'menu_show_work'
                }
            ]
        ];

        if (isAdmin) {
            menu.push([
                { 
                    text: 'üëë –ê–¥–º–∏–Ω', 
                    callback_data: 'menu_admin_panel'
                }
            ]);
        }

        menu.push([
            { 
                text: 'üîÑ –°–º–µ–Ω–∏—Ç—å –§–ò–û', 
                callback_data: 'menu_change_fio'
            }
        ]);

        return menu;
    }

    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    function createBackButton(backTo = 'menu_back_main') {
        return [
            [{ text: '‚Ü©Ô∏è –ù–∞–∑–∞–¥', callback_data: backTo }]
        ];
    }
}

module.exports = { setupMainHandlers };